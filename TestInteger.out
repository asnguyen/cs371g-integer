==19864== Memcheck, a memory error detector
==19864== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==19864== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==19864== Command: ./TestInteger
==19864== 
Running main() from gtest_main.cc
[==========] Running 72 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 72 tests from IntegerFixture
[ RUN      ] IntegerFixture.equal_equal_test_1
[       OK ] IntegerFixture.equal_equal_test_1 (37 ms)
[ RUN      ] IntegerFixture.equal_equal_test_2
[       OK ] IntegerFixture.equal_equal_test_2 (4 ms)
[ RUN      ] IntegerFixture.equal_equal_test_3
[       OK ] IntegerFixture.equal_equal_test_3 (4 ms)
[ RUN      ] IntegerFixture.equal_equal_test_4
[       OK ] IntegerFixture.equal_equal_test_4 (4 ms)
[ RUN      ] IntegerFixture.equal_equal_test_5
[       OK ] IntegerFixture.equal_equal_test_5 (4 ms)
[ RUN      ] IntegerFixture.less_than_test_1
[       OK ] IntegerFixture.less_than_test_1 (6 ms)
[ RUN      ] IntegerFixture.less_than_test_2
[       OK ] IntegerFixture.less_than_test_2 (2 ms)
[ RUN      ] IntegerFixture.less_than_test_3
[       OK ] IntegerFixture.less_than_test_3 (3 ms)
[ RUN      ] IntegerFixture.less_than_test_4
[       OK ] IntegerFixture.less_than_test_4 (3 ms)
[ RUN      ] IntegerFixture.less_than_test_5
[       OK ] IntegerFixture.less_than_test_5 (4 ms)
[ RUN      ] IntegerFixture.output_test_1
[       OK ] IntegerFixture.output_test_1 (3 ms)
[ RUN      ] IntegerFixture.output_test_2
[       OK ] IntegerFixture.output_test_2 (3 ms)
[ RUN      ] IntegerFixture.output_test_3
[       OK ] IntegerFixture.output_test_3 (3 ms)
[ RUN      ] IntegerFixture.output_test_4
[       OK ] IntegerFixture.output_test_4 (2 ms)
[ RUN      ] IntegerFixture.output_test_5
[       OK ] IntegerFixture.output_test_5 (4 ms)
[ RUN      ] IntegerFixture.valid_1
[       OK ] IntegerFixture.valid_1 (5 ms)
[ RUN      ] IntegerFixture.valid_2
[       OK ] IntegerFixture.valid_2 (2 ms)
[ RUN      ] IntegerFixture.valid_3
[       OK ] IntegerFixture.valid_3 (3 ms)
[ RUN      ] IntegerFixture.valid_4
[       OK ] IntegerFixture.valid_4 (2 ms)
[ RUN      ] IntegerFixture.valid_5
[       OK ] IntegerFixture.valid_5 (2 ms)
[ RUN      ] IntegerFixture.constructor_int_1
[       OK ] IntegerFixture.constructor_int_1 (4 ms)
[ RUN      ] IntegerFixture.constructor_int_2
[       OK ] IntegerFixture.constructor_int_2 (4 ms)
[ RUN      ] IntegerFixture.constructor_int_3
[       OK ] IntegerFixture.constructor_int_3 (3 ms)
[ RUN      ] IntegerFixture.constructor_int_4
[       OK ] IntegerFixture.constructor_int_4 (3 ms)
[ RUN      ] IntegerFixture.constructor_int_5
[       OK ] IntegerFixture.constructor_int_5 (3 ms)
[ RUN      ] IntegerFixture.constructor_string_1
[       OK ] IntegerFixture.constructor_string_1 (3 ms)
[ RUN      ] IntegerFixture.constructor_string_2
[       OK ] IntegerFixture.constructor_string_2 (3 ms)
[ RUN      ] IntegerFixture.constructor_string_3
[       OK ] IntegerFixture.constructor_string_3 (3 ms)
[ RUN      ] IntegerFixture.constructor_string_4
[       OK ] IntegerFixture.constructor_string_4 (4 ms)
[ RUN      ] IntegerFixture.constructor_string_5
[       OK ] IntegerFixture.constructor_string_5 (3 ms)
[ RUN      ] IntegerFixture.negative_test_1
[       OK ] IntegerFixture.negative_test_1 (8 ms)
[ RUN      ] IntegerFixture.negative_test_2
[       OK ] IntegerFixture.negative_test_2 (3 ms)
[ RUN      ] IntegerFixture.negative_test_3
[       OK ] IntegerFixture.negative_test_3 (3 ms)
[ RUN      ] IntegerFixture.negative_test_4
[       OK ] IntegerFixture.negative_test_4 (3 ms)
[ RUN      ] IntegerFixture.negative_test_5
[       OK ] IntegerFixture.negative_test_5 (3 ms)
[ RUN      ] IntegerFixture.plus_equal_test_1
[       OK ] IntegerFixture.plus_equal_test_1 (17 ms)
[ RUN      ] IntegerFixture.plus_equal_test_2
[       OK ] IntegerFixture.plus_equal_test_2 (3 ms)
[ RUN      ] IntegerFixture.plus_equal_test_3
[       OK ] IntegerFixture.plus_equal_test_3 (5 ms)
[ RUN      ] IntegerFixture.plus_equal_test_4
[       OK ] IntegerFixture.plus_equal_test_4 (4 ms)
[ RUN      ] IntegerFixture.plus_equal_test_5
[       OK ] IntegerFixture.plus_equal_test_5 (3 ms)
[ RUN      ] IntegerFixture.minus_equal_test_1
[       OK ] IntegerFixture.minus_equal_test_1 (8 ms)
[ RUN      ] IntegerFixture.minus_equal_test_2
[       OK ] IntegerFixture.minus_equal_test_2 (7 ms)
[ RUN      ] IntegerFixture.minus_equal_test_3
[       OK ] IntegerFixture.minus_equal_test_3 (3 ms)
[ RUN      ] IntegerFixture.minus_equal_test_4
[       OK ] IntegerFixture.minus_equal_test_4 (3 ms)
[ RUN      ] IntegerFixture.minus_equal_test_5
[       OK ] IntegerFixture.minus_equal_test_5 (3 ms)
[ RUN      ] IntegerFixture.multiply_equal_test_1
[       OK ] IntegerFixture.multiply_equal_test_1 (15 ms)
[ RUN      ] IntegerFixture.multiply_equal_test_2
[       OK ] IntegerFixture.multiply_equal_test_2 (4 ms)
[ RUN      ] IntegerFixture.multiply_equal_test_3
[       OK ] IntegerFixture.multiply_equal_test_3 (4 ms)
[ RUN      ] IntegerFixture.multiply_equal_test_4
[       OK ] IntegerFixture.multiply_equal_test_4 (4 ms)
[ RUN      ] IntegerFixture.multiply_equal_test_5
[       OK ] IntegerFixture.multiply_equal_test_5 (4 ms)
[ RUN      ] IntegerFixture.divide_equal_test_1
[       OK ] IntegerFixture.divide_equal_test_1 (6 ms)
[ RUN      ] IntegerFixture.divide_equal_test_2
[       OK ] IntegerFixture.divide_equal_test_2 (11 ms)
[ RUN      ] IntegerFixture.divide_equal_test_3
[       OK ] IntegerFixture.divide_equal_test_3 (2 ms)
[ RUN      ] IntegerFixture.divide_equal_test_4
[       OK ] IntegerFixture.divide_equal_test_4 (4 ms)
[ RUN      ] IntegerFixture.divide_equal_test_5
[       OK ] IntegerFixture.divide_equal_test_5 (3 ms)
[ RUN      ] IntegerFixture.mod_equal_test_1
[       OK ] IntegerFixture.mod_equal_test_1 (3 ms)
[ RUN      ] IntegerFixture.mod_equal_test_2
[       OK ] IntegerFixture.mod_equal_test_2 (4 ms)
[ RUN      ] IntegerFixture.mod_equal_test_3
[       OK ] IntegerFixture.mod_equal_test_3 (6 ms)
[ RUN      ] IntegerFixture.mod_equal_test_4
[       OK ] IntegerFixture.mod_equal_test_4 (4 ms)
[ RUN      ] IntegerFixture.mod_equal_test_5
[       OK ] IntegerFixture.mod_equal_test_5 (2 ms)
[ RUN      ] IntegerFixture.left_shift_equal_test_1
[       OK ] IntegerFixture.left_shift_equal_test_1 (4 ms)
[ RUN      ] IntegerFixture.left_shift_equal_test_2
[       OK ] IntegerFixture.left_shift_equal_test_2 (3 ms)
[ RUN      ] IntegerFixture.left_shift_equal_test_3
[       OK ] IntegerFixture.left_shift_equal_test_3 (2 ms)
[ RUN      ] IntegerFixture.right_shift_equal_test_1
[       OK ] IntegerFixture.right_shift_equal_test_1 (5 ms)
[ RUN      ] IntegerFixture.right_shift_equal_test_2
[       OK ] IntegerFixture.right_shift_equal_test_2 (4 ms)
[ RUN      ] IntegerFixture.right_shift_equal_test_3
[       OK ] IntegerFixture.right_shift_equal_test_3 (3 ms)
[ RUN      ] IntegerFixture.abs_1
[       OK ] IntegerFixture.abs_1 (4 ms)
[ RUN      ] IntegerFixture.abs_2
[       OK ] IntegerFixture.abs_2 (2 ms)
[ RUN      ] IntegerFixture.abs_3
[       OK ] IntegerFixture.abs_3 (3 ms)
[ RUN      ] IntegerFixture.pow_1
[       OK ] IntegerFixture.pow_1 (5 ms)
[ RUN      ] IntegerFixture.pow_2
[       OK ] IntegerFixture.pow_2 (13 ms)
[ RUN      ] IntegerFixture.pow_3
[       OK ] IntegerFixture.pow_3 (3 ms)
[----------] 72 tests from IntegerFixture (344 ms total)

[----------] Global test environment tear-down
[==========] 72 tests from 1 test case ran. (369 ms total)
[  PASSED  ] 72 tests.
==19864== 
==19864== HEAP SUMMARY:
==19864==     in use at exit: 0 bytes in 0 blocks
==19864==   total heap usage: 3,816 allocs, 3,816 frees, 368,118 bytes allocated
==19864== 
==19864== All heap blocks were freed -- no leaks are possible
==19864== 
==19864== For counts of detected and suppressed errors, rerun with: -v
==19864== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'TestInteger.c++'
Lines executed:100.00% of 418
Branches executed:73.11% of 2440
Taken at least once:36.56% of 2440
Calls executed:57.04% of 2828
Creating 'TestInteger.c++.gcov'
